{
  lib,
  pkgs,
  config,
  ...
}:
with lib;
let
  cfg = config.input.fcitx5;
in
{
  options.input.fcitx5 = {
    enable = mkEnableOption "Enable fcitx5 input method and font configurations";
  };

  config = mkIf cfg.enable {
    fonts = {
      fontDir.enable = true;
      enableDefaultPackages = true;
      packages = with pkgs; [
        noto-fonts
        source-han-sans
        source-han-serif
        source-code-pro
        hack-font
        jetbrains-mono
      ];
      fontconfig = {
        defaultFonts = {
          emoji = [ "Noto Color Emoji" ];
          monospace = [
            "Noto Sans Mono CJK SC"
            "Sarasa Mono SC"
            "DejaVu Sans Mono"
          ];
          sansSerif = [
            "Noto Sans CJK SC"
            "Source Han Sans SC"
            "DejaVu Sans"
          ];
          serif = [
            "Noto Serif CJK SC"
            "Source Han Serif SC"
            "DejaVu Serif"
          ];
        };
      };
    };

    i18n.inputMethod = {
      enable = true;
      type = "fcitx5";
      fcitx5 = {
        addons = with pkgs; [
          fcitx5-mozc
          fcitx5-rime
        ];
      waylandFrontend = true;
      };
    };
  };
}

